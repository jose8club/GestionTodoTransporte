-- MySQL Script generated by MySQL Workbench
-- 03/02/15 14:31:12
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema TTPT
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `TTPT` ;

-- -----------------------------------------------------
-- Schema TTPT
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TTPT` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `TTPT` ;

-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_USUARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TIPO_USUARIO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_USUARIO` (
  `Tipo` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Tipo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_FUNCIONARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TIPO_FUNCIONARIO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_FUNCIONARIO` (
  `Nombre` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`FUNCIONARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`FUNCIONARIO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`FUNCIONARIO` (
  `idFUNCIONARIO` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(20) NOT NULL COMMENT 'crear trigger on insert\nDOC\nADM\nOFF\n',
  PRIMARY KEY (`idFUNCIONARIO`),
  INDEX `fk_FUNCIONARIO-TIPO_FUNCIONARIO_idx` (`Tipo` ASC),
  CONSTRAINT `fk__FUNCIONARIO__TIPO_FUNCIONARIO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`USUARIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`USUARIO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`USUARIO` (
  `Nombre` VARCHAR(45) NOT NULL,
  `Contraseña` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(45) NOT NULL COMMENT 'Se usa para identificar los privilegios:\nADMIN->administrador, acceso completo.\nNORM->acceso limitado',
  `Funcionario` INT NULL COMMENT 'Asociacion a un funcionario de la nomina.\nPuede que despues no sea nulleable\n',
  PRIMARY KEY (`Nombre`),
  INDEX `fk_USUARIO-TIPO_idx` (`Tipo` ASC),
  INDEX `fk_USUARIO_FUNCIONARIO1_idx` (`Funcionario` ASC),
  CONSTRAINT `fk__USUARIO__TIPO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_USUARIO` (`Tipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__USUARIO__FUNCIONARIO`
    FOREIGN KEY (`Funcionario`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`AREA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`AREA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`AREA` (
  `Nombre` VARCHAR(45) NOT NULL COMMENT 'Representa el nombre completo de la familia de ingresos (servicio) que representa, por ejemplo licencia tipo B, A-1, etc...',
  `Alias` VARCHAR(45) NULL COMMENT 'Representa al código que se usa para identificar producto que pertenece al área.',
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRODUCTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PRODUCTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PRODUCTO` (
  `Nombre` VARCHAR(40) NOT NULL,
  `Area` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`),
  INDEX `fk_CURSO_AREA1_idx` (`Area` ASC),
  CONSTRAINT `fk__PRODUCTO__AREA`
    FOREIGN KEY (`Area`)
    REFERENCES `TTPT`.`AREA` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLIENTE_POTENCIAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`CLIENTE_POTENCIAL` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`CLIENTE_POTENCIAL` (
  `idCLIENTE_POTENCIAL` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(255) NOT NULL,
  `Telefono` DECIMAL(10,0) NULL,
  `Producto` VARCHAR(40) NOT NULL COMMENT 'Representa el producto por el cual el cliente muestra interés.',
  `Extra` TEXT NULL COMMENT 'Algún comentario o informacion adicional que se quisiese guardar.',
  PRIMARY KEY (`idCLIENTE_POTENCIAL`),
  INDEX `fk_CLIENTE-CURSO_idx` (`Producto` ASC),
  CONSTRAINT `fk__CLIENTE_POTENCIAL__CURSO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ATENCION_CLIENTE_POTENCIAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ATENCION_CLIENTE_POTENCIAL` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ATENCION_CLIENTE_POTENCIAL` (
  `idATENCION_CLIENTE_POTENCIAL` INT NOT NULL AUTO_INCREMENT,
  `Usuario` VARCHAR(45) NOT NULL,
  `Cliente_Potencial` INT NOT NULL,
  `Fecha` DATETIME NOT NULL,
  `Tipo` VARCHAR(3) NOT NULL COMMENT 'Se refiere a si la atención fue en:\nOFF: oficina\nTEL: por telefono \nu otro que se pueda agregar.',
  PRIMARY KEY (`idATENCION_CLIENTE_POTENCIAL`),
  INDEX `fk_ATENCION-USUARIO_idx` (`Usuario` ASC),
  INDEX `fk_ATENCION-CLIENTE_idx` (`Cliente_Potencial` ASC),
  CONSTRAINT `fk__ATENCION__USUARIO`
    FOREIGN KEY (`Usuario`)
    REFERENCES `TTPT`.`USUARIO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ATENCION__CLIENTE`
    FOREIGN KEY (`Cliente_Potencial`)
    REFERENCES `TTPT`.`CLIENTE_POTENCIAL` (`idCLIENTE_POTENCIAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CURSO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`CURSO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`CURSO` (
  `Codigo` VARCHAR(10) NOT NULL,
  `Producto` VARCHAR(40) NOT NULL,
  `FechaInicio` DATE NOT NULL,
  `FechaTermino` DATE NOT NULL,
  `Cupos` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`Codigo`, `Producto`),
  INDEX `fk_CLASE-CURSO_idx` (`Producto` ASC),
  CONSTRAINT `fk__CURSO__PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_DOCUMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TIPO_DOCUMENTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_DOCUMENTO` (
  `Nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`DOCUMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`DOCUMENTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`DOCUMENTO` (
  `idDOCUMENTO` INT NOT NULL AUTO_INCREMENT,
  `Tipo` VARCHAR(45) NOT NULL,
  `Funcionario` INT NOT NULL COMMENT 'Quien recibe o \"elabora\" el documento.',
  `Fecha` DATE NULL,
  `Estado` VARCHAR(45) NULL COMMENT 'Al día o pendiente',
  PRIMARY KEY (`idDOCUMENTO`),
  INDEX `fk__DOCUMENTO__FUNCIONARIO_idx` (`Funcionario` ASC),
  CONSTRAINT `fk__DOCUMENTO__TIPO_DOCUMENTO`
    FOREIGN KEY (`Tipo`)
    REFERENCES `TTPT`.`TIPO_DOCUMENTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__DOCUMENTO__FUNCIONARIO`
    FOREIGN KEY (`Funcionario`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TIPO_CLIENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TIPO_CLIENTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TIPO_CLIENTE` (
  `Nombre` VARCHAR(10) NOT NULL COMMENT 'Se refiere al tipo de ',
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLIENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`CLIENTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`CLIENTE` (
  `idCLIENTE` INT NOT NULL AUTO_INCREMENT,
  `Nombre` VARCHAR(255) NOT NULL,
  `RUT` VARCHAR(11) NOT NULL,
  `Fecha_Nac` DATE NOT NULL,
  `Telefono` DECIMAL(10,0) NOT NULL,
  `e_Mail` VARCHAR(255) NULL,
  `TipoCliente` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idCLIENTE`),
  INDEX `fk__CLIENTE__TIPO_CLIENTE_idx` (`TipoCliente` ASC),
  CONSTRAINT `fk__CLIENTE__TIPO_CLIENTE`
    FOREIGN KEY (`TipoCliente`)
    REFERENCES `TTPT`.`TIPO_CLIENTE` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`COMPRA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`COMPRA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`COMPRA` (
  `idCOMPRA` INT NOT NULL AUTO_INCREMENT,
  `Cliente` INT NOT NULL,
  `Producto` VARCHAR(40) NOT NULL,
  `Fecha` DATE NOT NULL COMMENT 'Fecha en que se realiza la compra',
  PRIMARY KEY (`idCOMPRA`),
  INDEX `fk_COMPRA-CLIENTE_idx` (`Cliente` ASC),
  INDEX `fk_COMPRA-PRODUCTO_idx` (`Producto` ASC),
  CONSTRAINT `fk__COMPRA__CLIENTE`
    FOREIGN KEY (`Cliente`)
    REFERENCES `TTPT`.`CLIENTE` (`idCLIENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__COMPRA__PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`MATRICULA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`MATRICULA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`MATRICULA` (
  `Documento` INT NOT NULL,
  `Curso` VARCHAR(10) NOT NULL,
  `Codigo` VARCHAR(6) NOT NULL COMMENT 'Codigo propio de la matrícula',
  `HoraTeoria` TIME NOT NULL,
  `HoraPractica` TIME NOT NULL,
  `CodigoCompra` INT NOT NULL,
  `FirmaGerencia` TINYINT(1) NOT NULL,
  `FirmaCliente` TINYINT(1) NOT NULL,
  `L_V` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'se refiere a si las clases son de lunes a viernes (true), o de lunes a sabado (false).',
  PRIMARY KEY (`Documento`),
  INDEX `fk_MATRICULA-CURSO_idx` (`Curso` ASC),
  UNIQUE INDEX `Codigo_UNIQUE` (`Codigo` ASC),
  INDEX `fk_MATRICULA__COMPRA_idx` (`CodigoCompra` ASC),
  CONSTRAINT `fk__MATRICULA__CURSO`
    FOREIGN KEY (`Curso`)
    REFERENCES `TTPT`.`CURSO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__MATRICULA__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__MATRICULA__COMPRA`
    FOREIGN KEY (`CodigoCompra`)
    REFERENCES `TTPT`.`COMPRA` (`idCOMPRA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_VISUAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`EXAMEN_VISUAL` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_VISUAL` (
  `Documento` INT NOT NULL,
  `Certificado` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`Documento`),
  CONSTRAINT `fk__EXAMEN_VISUAL__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTUDIANTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ESTUDIANTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ESTUDIANTE` (
  `idESTUDIANTE` VARCHAR(6) NOT NULL,
  `FotosCarnet` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'Indica la cantidad de Fotos tamaño carnet que ha entregado el estudiante',
  `CertEstudios` TINYINT(1) NOT NULL DEFAULT 0,
  `CertNotarial` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idESTUDIANTE`),
  CONSTRAINT `fk__ESTUDIANTE__MATRICULA`
    FOREIGN KEY (`idESTUDIANTE`)
    REFERENCES `TTPT`.`MATRICULA` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`MEDIO_PAGO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`MEDIO_PAGO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`MEDIO_PAGO` (
  `Nombre` VARCHAR(25) NOT NULL COMMENT 'FACTURA\nBOLETA',
  PRIMARY KEY (`Nombre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PAGO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PAGO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PAGO` (
  `Codigo` VARCHAR(6) NOT NULL,
  `Monto` DECIMAL(10,0) NULL DEFAULT 0 COMMENT 'Por el momento no vemos montos',
  `Medio_Pago` VARCHAR(25) NOT NULL,
  `Compra` INT NOT NULL COMMENT 'Compra a la que corresponde',
  `Fecha` DATE NOT NULL COMMENT 'Fecha en que es realizado el pago (ideal = a la compra)',
  `Descuento` INT NOT NULL DEFAULT 0 COMMENT 'va de 0 a 100\n',
  PRIMARY KEY (`Codigo`),
  INDEX `fk_PAGO_MEDIO_PAGO1_idx` (`Medio_Pago` ASC),
  INDEX `fk_PAGO-COMPRA_idx` (`Compra` ASC),
  CONSTRAINT `fk__PAGO_MEDIO__PAGO`
    FOREIGN KEY (`Medio_Pago`)
    REFERENCES `TTPT`.`MEDIO_PAGO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PAGO__COMPRA`
    FOREIGN KEY (`Compra`)
    REFERENCES `TTPT`.`COMPRA` (`Cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`DOCENTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`DOCENTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`DOCENTE` (
  `idDOCENTE` INT NOT NULL AUTO_INCREMENT,
  `Telefono` VARCHAR(45) NOT NULL,
  `Tipo` VARCHAR(1) NOT NULL COMMENT 'P\nI\nhacer trigguer on insert',
  PRIMARY KEY (`idDOCENTE`),
  CONSTRAINT `fk__DOCENTE__FUNCIONARIO`
    FOREIGN KEY (`idDOCENTE`)
    REFERENCES `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PROFESOR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PROFESOR` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PROFESOR` (
  `idPROFESOR` INT NOT NULL,
  PRIMARY KEY (`idPROFESOR`),
  CONSTRAINT `fk__PROFESOR__DOCENTE`
    FOREIGN KEY (`idPROFESOR`)
    REFERENCES `TTPT`.`DOCENTE` (`idDOCENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CLASE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`CLASE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`CLASE` (
  `idCLASE` INT NOT NULL AUTO_INCREMENT,
  `Curso` VARCHAR(10) NOT NULL,
  `Horario` TIME NOT NULL,
  `DIA` INT NOT NULL COMMENT '0:Lunes\n1:Martes\n2:Miercoles\n3:Jueves\n4:Viernes\n5:Sábado\n6:Domingo\n',
  `Tipo` VARCHAR(1) NOT NULL COMMENT 'T:Teoría\nP:Práctica',
  PRIMARY KEY (`idCLASE`),
  INDEX `fk__CLASE__CURSO_idx` (`Curso` ASC),
  CONSTRAINT `fk__CLASE__CURSO`
    FOREIGN KEY (`Curso`)
    REFERENCES `TTPT`.`CURSO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TEORIA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TEORIA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TEORIA` (
  `Clase` INT NOT NULL,
  `Profesor` INT NOT NULL COMMENT 'Encargado',
  INDEX `fk_TEORIA-PROFESOR_idx` (`Profesor` ASC),
  INDEX `fk_TEORIA-CLASE_idx` (`Clase` ASC),
  PRIMARY KEY (`Clase`),
  CONSTRAINT `fk__TEORIA__PROFESOR`
    FOREIGN KEY (`Profesor`)
    REFERENCES `TTPT`.`PROFESOR` (`idPROFESOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__TEORIA__CLASE`
    FOREIGN KEY (`Clase`)
    REFERENCES `TTPT`.`CLASE` (`idCLASE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTADO_AUTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ESTADO_AUTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ESTADO_AUTO` (
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Estado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`AUTO_ESCUELA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`AUTO_ESCUELA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`AUTO_ESCUELA` (
  `Matricula` VARCHAR(6) NOT NULL,
  `Modelo` VARCHAR(45) NULL,
  `Estado` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Matricula`),
  INDEX `fk_AUTO-ESCUELA-ESTADO_AUTO_idx` (`Estado` ASC),
  CONSTRAINT `fk__AUTO_ESCUELA__ESTADO_AUTO`
    FOREIGN KEY (`Estado`)
    REFERENCES `TTPT`.`ESTADO_AUTO` (`Estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`INSTRUCTOR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`INSTRUCTOR` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`INSTRUCTOR` (
  `idINSTRUCTOR` INT NOT NULL,
  `Auto` VARCHAR(6) NOT NULL COMMENT 'Delegado o responsable',
  PRIMARY KEY (`idINSTRUCTOR`),
  INDEX `fk_INSTRUCTOR-AUTO-ESCUELA_idx` (`Auto` ASC),
  CONSTRAINT `fk__INSTRUCTOR__DOCENTE`
    FOREIGN KEY (`idINSTRUCTOR`)
    REFERENCES `TTPT`.`DOCENTE` (`idDOCENTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__INSTRUCTOR__AUTO-ESCUELA`
    FOREIGN KEY (`Auto`)
    REFERENCES `TTPT`.`AUTO_ESCUELA` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRACTICA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PRACTICA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PRACTICA` (
  `Clase` INT NOT NULL,
  `Instructor` INT NOT NULL COMMENT 'Encargado',
  INDEX `fk_PRACTICA-INSTRUCTOR_idx` (`Instructor` ASC),
  PRIMARY KEY (`Clase`),
  CONSTRAINT `fk__PRACTICA__CLASE`
    FOREIGN KEY (`Clase`)
    REFERENCES `TTPT`.`CLASE` (`idCLASE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PRACTICA__INSTRUCTOR`
    FOREIGN KEY (`Instructor`)
    REFERENCES `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ASISTENCIA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA` (
  `idASISTENCIA` INT NOT NULL AUTO_INCREMENT,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Fecha` DATE NOT NULL,
  `Horario` TIME NOT NULL,
  PRIMARY KEY (`idASISTENCIA`),
  INDEX `fk_ASISTENCIA-ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk__ASISTENCIA__ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PSICOTECNICO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PSICOTECNICO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PSICOTECNICO` (
  `Documento` INT NOT NULL,
  PRIMARY KEY (`Documento`),
  INDEX `fk_PSICOTECNICO_DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__PSICOTECNICO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`CAMBIO_RUEDA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`CAMBIO_RUEDA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`CAMBIO_RUEDA` (
  `Documento` INT NOT NULL AUTO_INCREMENT,
  `Horario` TIME NOT NULL,
  PRIMARY KEY (`Documento`),
  INDEX `fk_CAMBIO_RUEDA-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__CAMBIO_RUEDA__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRACTICA_ESTUDIANTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PRACTICA_ESTUDIANTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PRACTICA_ESTUDIANTE` (
  `Practica` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Practica`, `Estudiante`),
  INDEX `fk_PRACTICA_ESTUDIANTE_ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk__PRACTICA_ESTUDIANTE__ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PRACTICA_ESTUDIANTE__PRACTICA`
    FOREIGN KEY (`Practica`)
    REFERENCES `TTPT`.`PRACTICA` (`Clase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`TEORIA_ESTUDIANTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`TEORIA_ESTUDIANTE` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`TEORIA_ESTUDIANTE` (
  `Teoria` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Teoria`, `Estudiante`),
  INDEX `fk_TEORIA_ESTUDIANTE_ESTUDIANTE_idx` (`Estudiante` ASC),
  CONSTRAINT `fk__TEORIA_ESTUDIANTE__ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__TEORIA_ESTUDIANTE__TEORIA`
    FOREIGN KEY (`Teoria`)
    REFERENCES `TTPT`.`TEORIA` (`Clase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_PRACTICO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`EXAMEN_PRACTICO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_PRACTICO` (
  `Documento` INT NOT NULL,
  `Calificacion` DECIMAL(10,0) NOT NULL COMMENT 'el estado del examen se deduce de la calificación, de 75% hacia arriba es aprobado.',
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_PRACTICO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__EXAMEN_PRACTICO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_TEORICO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`EXAMEN_TEORICO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_TEORICO` (
  `Documento` INT NOT NULL,
  `Calificacion` DECIMAL(10,0) NOT NULL,
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_TEORICO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__EXAMEN_TEORICO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA_PRACTICA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ASISTENCIA_PRACTICA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA_PRACTICA` (
  `Asistencia` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Practica` INT NOT NULL,
  `Auto` VARCHAR(6) NOT NULL,
  `Instructor` INT NOT NULL,
  PRIMARY KEY (`Asistencia`, `Estudiante`, `Practica`),
  INDEX `fk_ASISTENCIA_PRACTICA-PRACTICA_ESTUDIANTE_idx` (`Estudiante` ASC, `Practica` ASC),
  INDEX `fk_ASISTENCIA_PRACTICA-AUTO-ESCUELA_idx` (`Auto` ASC),
  INDEX `fk__ASISTENCIA_PRACTICA__INSTRUCTOR_idx` (`Instructor` ASC),
  CONSTRAINT `fk__ASISTENCIA_PRACTICA__ASISTENCIA`
    FOREIGN KEY (`Asistencia`)
    REFERENCES `TTPT`.`ASISTENCIA` (`idASISTENCIA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ASISTENCIA_PRACTICA__PRACTICA__ESTUDIANTE`
    FOREIGN KEY (`Estudiante` , `Practica`)
    REFERENCES `TTPT`.`PRACTICA_ESTUDIANTE` (`Estudiante` , `Practica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ASISTENCIA_PRACTICA__AUTO_ESCUELA`
    FOREIGN KEY (`Auto`)
    REFERENCES `TTPT`.`AUTO_ESCUELA` (`Matricula`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ASISTENCIA_PRACTICA__INSTRUCTOR`
    FOREIGN KEY (`Instructor`)
    REFERENCES `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ASISTENCIA_TEORIA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ASISTENCIA_TEORIA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ASISTENCIA_TEORIA` (
  `Asistencia` INT NOT NULL,
  `Estudiante` VARCHAR(6) NOT NULL,
  `Teoria` INT NOT NULL,
  PRIMARY KEY (`Asistencia`, `Estudiante`, `Teoria`),
  INDEX `fk_ASISTENCIA_TEORIA-TEORIA_ESTUDIANTE_idx` (`Estudiante` ASC, `Teoria` ASC),
  CONSTRAINT `fk__ASISTENCIA_TEORIA__ASISTENCIA`
    FOREIGN KEY (`Asistencia`)
    REFERENCES `TTPT`.`ASISTENCIA` (`idASISTENCIA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ASISTENCIA_TEORIA__TEORIA_ESTUDIANTE`
    FOREIGN KEY (`Estudiante` , `Teoria`)
    REFERENCES `TTPT`.`TEORIA_ESTUDIANTE` (`Estudiante` , `Teoria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRODUCTO_TIPO_DOCUMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PRODUCTO_TIPO_DOCUMENTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PRODUCTO_TIPO_DOCUMENTO` (
  `Producto` VARCHAR(40) NOT NULL,
  `Documento` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Producto`, `Documento`),
  INDEX `fk_PRODUCTO_DOCUMENTO-TIPO_DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__PRODUCTO_DOCUMENTO__PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PRODUCTO_DOCUMENTO__TIPO_DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`TIPO_DOCUMENTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`PRECIO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`PRECIO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`PRECIO` (
  `Producto` VARCHAR(45) NOT NULL,
  `Tipo_Cliente` VARCHAR(10) NOT NULL,
  `Monto` DECIMAL(10,0) NOT NULL DEFAULT 0 COMMENT 'Reprecenta el precio del producto \'Producto\' para el un cliente dado su \'Tipo_Cliente\'',
  PRIMARY KEY (`Producto`, `Tipo_Cliente`),
  INDEX `fk_PRECIO-TIPO_CLIENTE_idx` (`Tipo_Cliente` ASC),
  CONSTRAINT `fk__PRECIO__PRODUCTO`
    FOREIGN KEY (`Producto`)
    REFERENCES `TTPT`.`PRODUCTO` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__PRECIO__TIPO_CLIENTE`
    FOREIGN KEY (`Tipo_Cliente`)
    REFERENCES `TTPT`.`TIPO_CLIENTE` (`Nombre`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Faltan los Precios, soloagregaré un par...';


-- -----------------------------------------------------
-- Table `TTPT`.`BOLETA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`BOLETA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`BOLETA` (
  `Codigo` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `fk__PAGO__BOLETA`
    FOREIGN KEY (`Codigo`)
    REFERENCES `TTPT`.`PAGO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`FACTURA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`FACTURA` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`FACTURA` (
  `Codigo` VARCHAR(6) NOT NULL,
  PRIMARY KEY (`Codigo`),
  CONSTRAINT `fk__FACTURA__PAGO`
    FOREIGN KEY (`Codigo`)
    REFERENCES `TTPT`.`PAGO` (`Codigo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`ESTUDIANTE_DOCUMENTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`ESTUDIANTE_DOCUMENTO` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`ESTUDIANTE_DOCUMENTO` (
  `Estudiante` VARCHAR(6) NOT NULL,
  `Documento` INT NOT NULL,
  PRIMARY KEY (`Estudiante`, `Documento`),
  INDEX `fk_ESTUDIANTE_DOCUMENTO-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__ESTUDIANTE_DOCUMENTO__ESTUDIANTE`
    FOREIGN KEY (`Estudiante`)
    REFERENCES `TTPT`.`ESTUDIANTE` (`idESTUDIANTE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk__ESTUDIANTE_DOCUMENTO__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TTPT`.`EXAMEN_MUNICIPAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `TTPT`.`EXAMEN_MUNICIPAL` ;

CREATE TABLE IF NOT EXISTS `TTPT`.`EXAMEN_MUNICIPAL` (
  `Documento` INT NOT NULL,
  `Comentario` TEXT NULL COMMENT 'Motivo en caso de reprobar',
  PRIMARY KEY (`Documento`),
  INDEX `fk_EXAMEN_MUNICIPAL-DOCUMENTO_idx` (`Documento` ASC),
  CONSTRAINT `fk__EXAMEN_MUNICIPAL__DOCUMENTO`
    FOREIGN KEY (`Documento`)
    REFERENCES `TTPT`.`DOCUMENTO` (`idDOCUMENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `TTPT` ;

-- -----------------------------------------------------
-- procedure MATRICULAR
-- -----------------------------------------------------

USE `TTPT`;
DROP procedure IF EXISTS `TTPT`.`MATRICULAR`;

DELIMITER $$
USE `TTPT`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `MATRICULAR`(
						IN nroReg VARCHAR(6), 
                        IN nombre VARCHAR(255), 
                        IN rut VARCHAR(11), 
                        IN fecha_Nac DATE, 
                        IN telefono NUMERIC, 
                        IN email VARCHAR(255), 
                        IN tipoCliente VARCHAR(10), 
                        IN licencia VARCHAR(40), 
                        IN fecha DATE, 
                        IN usuario VARCHAR(45), 
                        IN curso VARCHAR(6), 
                        IN hraTeoria TIME, 
                        IN hraPractica TIME, 
                        IN l_v BOOL, 
                        IN n_fotos BOOL, 
                        IN c_estudios BOOL, 
                        IN c_notarial BOOL, 
                        IN descuento INT, 
                        IN docuPago VARCHAR(10), 
                        IN medioPago VARCHAR(25), 
                        IN pagado BOOL, 
                        IN codigoPago VARCHAR(6)
)
BEGIN

	declare error_msg varchar(20) default "";
    
    declare cuposLlenos bool;
    declare cursoEnMarcha bool;

	declare id_cliente int;
    declare id_compra int;
    declare id_documento int;
    
    declare listo bool default false;
    declare id_clase int;
    declare tipoClase varchar(1);
    
    declare clases cursor for 
			select cl.idCLASE, cl.Tipo 
				from clase cl 
                where cl.Curso = curso;
                
	declare continue handler for sqlstate '02000' set listo = true;
    #DECLARE EXIT HANDLER FOR SQLEXCEPTION  ROLLBACK;
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
	BEGIN
		GET DIAGNOSTICS CONDITION 1 @sqlstate = RETURNED_SQLSTATE,
		 @errno = MYSQL_ERRNO, @text = MESSAGE_TEXT;
		SET @full_error = CONCAT("ERROR ", @errno, " (", @sqlstate, "): ", @text);
		SELECT @full_error;
	END;
    
	start transaction;
        
        select if((c.cupos-count(m.curso)) = 0 , true, false) into cuposLlenos from curso c, matricula m where c.codigo = curso And m.curso = curso;
        select if( datediff((select c.FechaTermino from curso c where c.codigo = curso),fecha) > 0, true, false ) into cursoEnMarcha;
        
        if cuposLlenos then 
			rollback;
			set error_msg = 'Cupos llenos';
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = error_msg;
		end if;
        
        if !cursoEnMarcha then 
			rollback;
			set error_msg = 'Curso terminó';
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = error_msg;
		end if;
        
        insert into cliente (`Nombre`,`RUT`,`Fecha_Nac`,`Telefono`,`e_Mail`,`TipoCliente`)
					values (nombre, rut, fecha_Nac, telefono, email, tipoCliente);
		select last_insert_id() into id_cliente;
		insert into compra (`Cliente`,`Producto`,`Fecha`)
					values (id_cliente, licencia, fecha);
		select last_insert_id() into id_compra;
        insert into pago (`Codigo`, `Medio_Pago`, `Compra`, `Fecha`, `Descuento`)
					values (codigoPago, medioPago, id_compra, fecha, descuento);
		if STRCMP(docuPago, 'Boleta') = 0 then 
			insert into boleta (`Codigo`) value (codigoPago);
		else
			insert into factura (`Codigo`) value (codigoPago);
        end if;
		insert into documento (`Tipo`,`Funcionario`,`Fecha`)
					values ('Matrícula', (select u.Funcionario from usuario  u where u.Nombre = usuario), fecha);
		select last_insert_id() into id_documento;
		insert into matricula (`Documento`, `Curso`,`Codigo`,`HoraTeoria`,`HoraPractica`,`CodigoCompra`,`FirmaGerencia`,`FirmaCliente`,`L_V`)
					values (id_documento, curso, nroReg, hraTeoria, hraPractica, id_compra, true, true, l_v);#firmaG, firmaC, l_v);
		insert into estudiante (`idESTUDIANTE`,`FotosCarnet`,`CertEstudios`,`CertNotarial`)
					values (nroReg, n_fotos, c_estudios, c_notarial);
		
        open clases;
			clases_loop: loop
				fetch clases into id_clase, tipoClase;
					if listo then leave clases_loop; end if;
                    if STRCMP(tipoClase, 'T') = 0 then 
						insert into teoria_estudiante (`Teoria`,`Estudiante`) values (id_clase, nroReg);
					elseif STRCMP(tipoClase, 'P') = 0 then
						insert into practica_estudiante (`Practica`,`Estudiante`) values (id_clase, nroReg);
					else
						rollback;
                        set error_msg = concat('Valor desconocido ',tipoClase);
                        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = error_msg;
                        leave clases_loop;
                    end if;
			end loop clases_loop;
        close clases;
    
	commit;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ATENDER_CLIENTE
-- -----------------------------------------------------

USE `TTPT`;
DROP procedure IF EXISTS `TTPT`.`ATENDER_CLIENTE`;

DELIMITER $$
USE `TTPT`$$
-- --------------------------------------------------------------------------------
-- Routine DDL
-- Note: comments before and after the routine body will not be stored by the server
CREATE PROCEDURE `ATENDER_CLIENTE`(
									Nombre VARCHAR(255),
									Telefono NUMERIC,
									Licencia VARCHAR(10),
									Comentarios TEXT,
									Usuario VARCHAR(45),
									Fecha DATETIME,
									Tipo VARCHAR(3)
)
BEGIN
	DECLARE id_cliente int;
	
	Start transaction;
		
		INSERT INTO CLIENTE_POTENCIAL (Nombre, Telefono, Producto, Extra) VALUES (Nombre, Telefono, Licencia, Comentarios);
		SELECT LAST_INSERT_ID() INTO id_cliente;
		INSERT INTO ATENCION_CLIENTE_POTENCIAL (Usuario, Cliente_Potencial, Fecha, Tipo) VALUES (Usuario, id_cliente, Fecha, Tipo);
		
	commit;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `TTPT`.`TIPO_USUARIO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`TIPO_USUARIO` (`Tipo`) VALUES ('Recepción');
INSERT INTO `TTPT`.`TIPO_USUARIO` (`Tipo`) VALUES ('Administrador');
INSERT INTO `TTPT`.`TIPO_USUARIO` (`Tipo`) VALUES ('Desarrollador');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`TIPO_FUNCIONARIO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`) VALUES ('Docente');
INSERT INTO `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`) VALUES ('Recepcion');
INSERT INTO `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`) VALUES ('Administrativo');
INSERT INTO `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`) VALUES ('Gerencia');
INSERT INTO `TTPT`.`TIPO_FUNCIONARIO` (`Nombre`) VALUES ('Desarrollador');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`FUNCIONARIO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (1, 'Cristina', 'Recepcion');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (2, 'Genoveva', 'Recepción');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (3, 'Paulina', 'Administrativo');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (4, 'Cristofer', 'Administrativo');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (5, 'Janette', 'Gerencia');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (6, 'Juan Carlos', 'Gerencia');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (7, 'Jorge Palma', 'Docente');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (8, 'José Matus', 'Docente');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (9, 'Otto Müller', 'Docente');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (10, 'Nestor', 'Docente');
INSERT INTO `TTPT`.`FUNCIONARIO` (`idFUNCIONARIO`, `Nombre`, `Tipo`) VALUES (11, 'Desarrollador', 'Desarrollador');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`USUARIO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`USUARIO` (`Nombre`, `Contraseña`, `Tipo`, `Funcionario`) VALUES ('Desarrollador', 'desarrollador', 'Desarrollador', 11);

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`AREA`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`AREA` (`Nombre`, `Alias`) VALUES ('Particular', 'B');
INSERT INTO `TTPT`.`AREA` (`Nombre`, `Alias`) VALUES ('Profesional', 'INTENSIVO');
INSERT INTO `TTPT`.`AREA` (`Nombre`, `Alias`) VALUES ('Maquinaria Pesada', 'OMP');
INSERT INTO `TTPT`.`AREA` (`Nombre`, `Alias`) VALUES ('Otro', 'Z');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`PRODUCTO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('A-2', 'Profesional');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('A-3', 'Profesional');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('A-4', 'Profesional');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('A-5', 'Profesional');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('Clase B', 'Particular');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('Dual', 'Particular');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('Retroexcavadora', 'Maquinaria Pesada');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('Grua Horquilla', 'Maquinaria Pesada');
INSERT INTO `TTPT`.`PRODUCTO` (`Nombre`, `Area`) VALUES ('Otro', 'Otro');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`TIPO_DOCUMENTO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Matrícula');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Examen Visual');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Examen Psicotécnico');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Cambio Rueda');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Examen Practico');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Examen Teorico');
INSERT INTO `TTPT`.`TIPO_DOCUMENTO` (`Nombre`) VALUES ('Examen Municipal');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`TIPO_CLIENTE`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`TIPO_CLIENTE` (`Nombre`) VALUES ('Estudiante');
INSERT INTO `TTPT`.`TIPO_CLIENTE` (`Nombre`) VALUES ('Particular');
INSERT INTO `TTPT`.`TIPO_CLIENTE` (`Nombre`) VALUES ('SENSE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`MEDIO_PAGO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`MEDIO_PAGO` (`Nombre`) VALUES ('Efectivo');
INSERT INTO `TTPT`.`MEDIO_PAGO` (`Nombre`) VALUES ('Documento');
INSERT INTO `TTPT`.`MEDIO_PAGO` (`Nombre`) VALUES ('Beca');
INSERT INTO `TTPT`.`MEDIO_PAGO` (`Nombre`) VALUES ('SENSE');
INSERT INTO `TTPT`.`MEDIO_PAGO` (`Nombre`) VALUES ('Tarjeta');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`DOCENTE`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`DOCENTE` (`idDOCENTE`, `Telefono`, `Tipo`) VALUES (7, '12876354', 'I');
INSERT INTO `TTPT`.`DOCENTE` (`idDOCENTE`, `Telefono`, `Tipo`) VALUES (8, '98765342', 'I');
INSERT INTO `TTPT`.`DOCENTE` (`idDOCENTE`, `Telefono`, `Tipo`) VALUES (9, '63287417', 'I');
INSERT INTO `TTPT`.`DOCENTE` (`idDOCENTE`, `Telefono`, `Tipo`) VALUES (10, '87563241', 'P');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`PROFESOR`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`PROFESOR` (`idPROFESOR`) VALUES (10);

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`ESTADO_AUTO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`ESTADO_AUTO` (`Estado`) VALUES ('Disponible');
INSERT INTO `TTPT`.`ESTADO_AUTO` (`Estado`) VALUES ('En Taller');
INSERT INTO `TTPT`.`ESTADO_AUTO` (`Estado`) VALUES ('De Baja');
INSERT INTO `TTPT`.`ESTADO_AUTO` (`Estado`) VALUES ('En Comuna');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`AUTO_ESCUELA`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('GYIH04', 'V16', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('CFEA46', 'V16', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('KNDC29', 'V16', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('AIWP64', 'V16', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('WTYN26', 'V16', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('UIHM09', 'Chevrolet', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('ATMZ80', 'Chevrolet', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('NEKH99', 'Chevrolet', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('ZUYY89', 'Chevrolet', 'Disponible');
INSERT INTO `TTPT`.`AUTO_ESCUELA` (`Matricula`, `Modelo`, `Estado`) VALUES ('OBEP72', 'Chevrolet', 'Disponible');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`INSTRUCTOR`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`, `Auto`) VALUES (7, 'GYIH04');
INSERT INTO `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`, `Auto`) VALUES (8, 'KNDC29');
INSERT INTO `TTPT`.`INSTRUCTOR` (`idINSTRUCTOR`, `Auto`) VALUES (9, 'UIHM09');

COMMIT;


-- -----------------------------------------------------
-- Data for table `TTPT`.`PRECIO`
-- -----------------------------------------------------
START TRANSACTION;
USE `TTPT`;
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('Clase B', 'Estudiante', 80000);
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('Clase B', 'Particular', 90000);
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('A-2', 'Particular', 250000);
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('A-3', 'Particular', 300000);
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('A-4', 'Particular', 300000);
INSERT INTO `TTPT`.`PRECIO` (`Producto`, `Tipo_Cliente`, `Monto`) VALUES ('A-5', 'Particular', 350000);

COMMIT;

